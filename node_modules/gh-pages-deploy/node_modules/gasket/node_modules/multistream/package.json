{
  "name": "multistream",
  "description": "A stream that emits multiple other streams one after another (streams2)",
  "version": "1.6.1",
  "author": {
    "name": "Feross Aboukhadijeh",
    "email": "feross@feross.org",
    "url": "http://feross.org/"
  },
  "bugs": {
    "url": "https://github.com/feross/multistream/issues"
  },
  "dependencies": {
    "inherits": "^2.0.1"
  },
  "devDependencies": {
    "concat-stream": "^1.4.6",
    "standard": "^4.0.0",
    "string-to-stream": "^1.0.0",
    "tape": "^4.0.0",
    "through": "^2.3.4",
    "zuul": "^3.0.0"
  },
  "homepage": "https://github.com/feross/multistream",
  "keywords": [
    "combine streams",
    "join streams",
    "concat streams",
    "multiple streams",
    "combine",
    "join",
    "concat",
    "multiple",
    "file stream",
    "append",
    "append streams",
    "combiner",
    "joiner"
  ],
  "license": "MIT",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/feross/multistream.git"
  },
  "scripts": {
    "test": "standard && npm run test-node && npm run test-browser",
    "test-browser": "zuul -- test/*.js",
    "test-browser-local": "zuul --local -- test/*.js",
    "test-node": "tape test/*.js"
  },
  "readme": "# multistream [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url]\n\n[travis-image]: https://img.shields.io/travis/feross/multistream.svg?style=flat\n[travis-url]: https://travis-ci.org/feross/multistream\n[npm-image]: https://img.shields.io/npm/v/multistream.svg?style=flat\n[npm-url]: https://npmjs.org/package/multistream\n[downloads-image]: https://img.shields.io/npm/dm/multistream.svg?style=flat\n[downloads-url]: https://npmjs.org/package/multistream\n\n#### A stream that emits multiple other streams one after another (streams2)\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/magnet-uri.svg)](https://saucelabs.com/u/magnet-uri)\n\n![cat](https://raw.githubusercontent.com/feross/multistream/master/img.jpg)\n\nSimple, robust streams2 version of [combined-stream](https://www.npmjs.org/package/combined-stream). Allows you to combine multiple streams into a single stream. When the first stream ends, the next one starts, and so on, until all streams are consumed.\n\nThis module is used by [WebTorrent](http://webtorrent.io), specifically [create-torrent](https://github.com/feross/create-torrent).\n\n### install\n\n```\nnpm install multistream\n```\n\n### usage\n\nUse `multistream` like this:\n\n```js\nvar MultiStream = require('multistream')\nvar fs = require('fs')\n\nvar streams = [\n  fs.createReadStream(__dirname + '/numbers/1.txt'),\n  fs.createReadStream(__dirname + '/numbers/2.txt'),\n  fs.createReadStream(__dirname + '/numbers/3.txt')\n]\n\nMultiStream(streams).pipe(process.stdout) // => 123\n```\n\nTo lazily create the streams, wrap them in a function:\n\n```js\nvar streams = [\n  fs.createReadStream(__dirname + '/numbers/1.txt'),\n  function () { // will be executed when the stream is active\n    return fs.createReadStream(__dirname + '/numbers/2.txt')\n  },\n  function () { // same\n    return fs.createReadStream(__dirname + '/numbers/3.txt')\n  }\n]\n\nMultiStream(streams).pipe(process.stdout) // => 123\n```\n\nAlternativelly, streams may be created by a generator function:\n\n```js\nvar count = 0;\nvar streams = function () {\n  if (count > 3) return false\n  count++\n  return fs.createReadStream(__dirname + '/numbers/' + count + '.txt')\n}\n\nMultiStream(streams).pipe(process.stdout) // => 123\n```\n\n\n### contributors\n\n- [Feross Aboukhadijeh](http://feross.org)\n- [Mathias Buus](https://github.com/mafintosh/)\n- [Yuri Astrakhan](https://github.com/nyurik/)\n\n### license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n",
  "readmeFilename": "README.md",
  "_id": "multistream@1.6.1",
  "dist": {
    "shasum": "0280986bc87fc0f26cc3da6a0050edbc8651a4d7"
  },
  "_from": "multistream@^1.4.2",
  "_resolved": "https://registry.npmjs.org/multistream/-/multistream-1.6.1.tgz"
}
